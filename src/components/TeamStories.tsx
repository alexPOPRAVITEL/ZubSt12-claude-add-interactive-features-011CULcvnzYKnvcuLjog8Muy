import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Star, Calendar, Users, Award, Send, CheckCircle } from 'lucide-react';
import { AppointmentModal } from './AppointmentModal';

export const TeamStories: React.FC = () => {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [selectedDoctor, setSelectedDoctor] = useState('');
  const [isJobFormOpen, setIsJobFormOpen] = useState(false);
  const [jobFormData, setJobFormData] = useState({
    name: '',
    position: '',
    experience: '',
    phone: '',
    email: '',
    motivation: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle');

  const doctors = [
    {
      name: '–ì–æ–ª–µ–≤–∞ –ù–∞—Ç–∞–ª—å—è –§–µ–¥–æ—Ä–æ–≤–Ω–∞',
      position: '–ì–ª–∞–≤–Ω—ã–π –≤—Ä–∞—á, —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥-—Ç–µ—Ä–∞–ø–µ–≤—Ç',
      badge: '–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å',
      badgeColor: 'bg-green-500',
      story: '–ú–æ—è –∏—Å—Ç–æ—Ä–∏—è –Ω–∞—á–∞–ª–∞—Å—å —Å –º–µ—á—Ç—ã —Å–æ–∑–¥–∞—Ç—å –º–µ—Å—Ç–æ, –≥–¥–µ –∫–∞–∂–¥—ã–π –ø–∞—Ü–∏–µ–Ω—Ç —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –∫–∞–∫ –¥–æ–º–∞. –í 2023 –≥–æ–¥—É —ç—Ç–∞ –º–µ—á—Ç–∞ —Å—Ç–∞–ª–∞ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é ‚Äî —Ä–æ–¥–∏–ª–∞—Å—å "–ó—É–±–Ω–∞—è –°—Ç–∞–Ω—Ü–∏—è". –ó–¥–µ—Å—å –º—ã –ª–µ—á–∏–º –Ω–µ –ø—Ä–æ—Å—Ç–æ –∑—É–±—ã, –º—ã –¥–∞—Ä–∏–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ.',
      achievements: [
        '500+ —É—Å–ø–µ—à–Ω—ã—Ö –ª–µ—á–µ–Ω–∏–π',
        '–û—Å–Ω–æ–≤–∞—Ç–µ–ª—å —Å–µ–º–µ–π–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –≤ –ë–∞—Ä–Ω–∞—É–ª–µ',
        '–†–µ–≥—É–ª—è—Ä–Ω–æ–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏'
      ],
      image: 'https://images.pexels.com/photos/5215024/pexels-photo-5215024.jpeg?auto=compress&cs=tinysrgb&w=600',
      isExisting: true
    },
    {
      name: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞–º!',
      position: '–í—Ä–∞—á-–æ—Ä—Ç–æ–¥–æ–Ω—Ç',
      badge: '–ù–æ–≤—ã–π —á–ª–µ–Ω –∫–æ–º–∞–Ω–¥—ã',
      badgeColor: 'bg-blue-500',
      story: '–≠—Ç–∞ –∏—Å—Ç–æ—Ä–∏—è –µ—â–µ –ø–∏—à–µ—Ç—Å—è... –ú—ã –∏—â–µ–º —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤–æ–≥–æ –æ—Ä—Ç–æ–¥–æ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–Ω–µ—Ç —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π —Å–µ–º—å–∏ –∏ –ø–æ–º–æ–∂–µ—Ç –ª—é–¥—è–º –æ–±—Ä–µ—Å—Ç–∏ –∫—Ä–∞—Å–∏–≤—ã–µ —É–ª—ã–±–∫–∏. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –±—É–¥–µ—à—å —Ç—ã?',
      achievements: [
        '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞',
        '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ',
        '–î—Ä—É–∂–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤'
      ],
      image: 'https://images.pexels.com/photos/6812540/pexels-photo-6812540.jpeg?auto=compress&cs=tinysrgb&w=600',
      isExisting: false,
      jobPosition: 'orthodontist'
    },
    {
      name: '–ó–¥–µ—Å—å –º–æ–∂–µ—à—å –±—ã—Ç—å —Ç—ã',
      position: '–í—Ä–∞—á-–∏–º–ø–ª–∞–Ω—Ç–æ–ª–æ–≥',
      badge: '–ñ–¥–µ–º —Ç–µ–±—è',
      badgeColor: 'bg-purple-500',
      story: '–ü—Ä–µ–¥—Å—Ç–∞–≤—å: —Ç—ã –ø–æ–º–æ–≥–∞–µ—à—å –ª—é–¥—è–º –≤–µ—Ä–Ω—É—Ç—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ, —Ä–∞–±–æ—Ç–∞–µ—à—å —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –≤ –¥—Ä—É–∂–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ. –ù–∞—á–Ω–∏ –ø–∏—Å–∞—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é –≤ "–ó—É–±–Ω–æ–π –°—Ç–∞–Ω—Ü–∏–∏" —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!',
      achievements: [
        '–†–∞–±–æ—Ç–∞ —Å —Ç–æ–ø–æ–≤—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –∏–º–ø–ª–∞–Ω—Ç–æ–≤',
        '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –Ω–∞–≤—ã–∫–æ–≤',
        '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞'
      ],
      image: 'https://images.pexels.com/photos/3845623/pexels-photo-3845623.jpeg?auto=compress&cs=tinysrgb&w=600',
      isExisting: false,
      jobPosition: 'implantologist'
    },
    {
      name: '–ó–¥–µ—Å—å –º–æ–∂–µ—à—å –±—ã—Ç—å —Ç—ã',
      position: '–î–µ—Ç—Å–∫–∏–π —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥',
      badge: '–ú–µ—á—Ç–∞–µ–º –æ —Ç–µ–±–µ',
      badgeColor: 'bg-pink-500',
      story: '–î–µ—Ç–∏ ‚Äî —ç—Ç–æ –Ω–∞—à–µ –±—É–¥—É—â–µ–µ. –ú—ã –∏—â–µ–º –≤—Ä–∞—á–∞, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –æ–±—â–∏–π —è–∑—ã–∫ —Å –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º–∏ –∏ –¥–µ–ª–∞—Ç—å –∏—Ö –≤–∏–∑–∏—Ç—ã —Ä–∞–¥–æ—Å—Ç–Ω—ã–º–∏. –ú–æ–∂–µ—Ç –±—ã—Ç—å, —ç—Ç–æ —Ç–≤–æ—è –∏—Å—Ç–æ—Ä–∏—è?',
      achievements: [
        '–†–∞–±–æ—Ç–∞ —Å —Å–∞–º—ã–º–∏ –º–∏–ª—ã–º–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º–∏',
        '–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –¥–µ—Ç—Å–∫–∞—è –∑–æ–Ω–∞',
        '–ë–ª–∞–≥–æ–¥–∞—Ä–Ω—ã–µ —Ä–æ–¥–∏—Ç–µ–ª–∏'
      ],
      image: 'https://images.pexels.com/photos/6812540/pexels-photo-6812540.jpeg?auto=compress&cs=tinysrgb&w=600',
      isExisting: false,
      jobPosition: 'pediatric'
    }
  ];

  const teamTestimonials = [
    {
      quote: '–í "–ó—É–±–Ω–æ–π –°—Ç–∞–Ω—Ü–∏–∏" —è –Ω–∞—à–ª–∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–±–æ—Ç—É, –∞ –º–µ—Å—Ç–æ –≥–¥–µ –º–æ–≥—É —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∞–º–±–∏—Ü–∏–∏ –∏ –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º. –ó–¥–µ—Å—å —Ü–µ–Ω—è—Ç –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.',
      author: '–ù–∞—Ç–∞–ª—å—è –§., –≥–ª–∞–≤–Ω—ã–π –≤—Ä–∞—á'
    },
    {
      quote: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ, –¥—Ä—É–∂–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É—á–∏—Ç—å—Å—è –Ω–æ–≤–æ–º—É ‚Äî —ç—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞.',
      author: '–ú–∞—Ä–∏—è –ê., –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Ä–∞—á–∞'
    },
    {
      quote: '–°–µ–º–µ–π–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –≤ –∫–ª–∏–Ω–∏–∫–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º. –†–∞–±–æ—Ç–∞—Ç—å –∑–¥–µ—Å—å ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ª–µ—á–∏—Ç—å –∑—É–±—ã, —ç—Ç–æ –¥–∞—Ä–∏—Ç—å –ª—é–¥—è–º —Ä–∞–¥–æ—Å—Ç—å –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å.',
      author: '–ê–Ω–Ω–∞ –°., –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
    }
  ];

  const handleDoctorAction = (doctor: any, actionType: 'appointment' | 'blog') => {
    if (doctor.isExisting) {
      if (actionType === 'appointment') {
        setSelectedDoctor(doctor.name);
        setIsModalOpen(true);
      } else {
        // Navigate to blog or doctor's page
        window.location.href = '/blog';
      }
    } else {
      // Open job application form
      setJobFormData({ ...jobFormData, position: doctor.jobPosition });
      setIsJobFormOpen(true);
    }
  };

  const handleJobSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);

    try {
      const response = await fetch(`${import.meta.env.VITE_SUPABASE_URL}/functions/v1/notify`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${import.meta.env.VITE_SUPABASE_ANON_KEY}`,
        },
        body: JSON.stringify({
          ...jobFormData,
          type: '–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É'
        }),
      });

      if (!response.ok) throw new Error('Failed to submit application');

      setSubmitStatus('success');
      setTimeout(() => {
        setIsJobFormOpen(false);
        setSubmitStatus('idle');
        setJobFormData({
          name: '',
          position: '',
          experience: '',
          phone: '',
          email: '',
          motivation: ''
        });
      }, 2000);
    } catch (error) {
      setSubmitStatus('error');
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="py-16">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          className="text-center mb-16"
        >
          <h1 className="text-4xl md:text-5xl font-bold text-[#002B49] mb-6">
            –ù–∞—à–∏ –∏—Å—Ç–æ—Ä–∏–∏
          </h1>
          <p className="text-xl text-gray-600 max-w-4xl mx-auto mb-12">
            –ö–∞–∂–¥—ã–π –≤—Ä–∞—á "–ó—É–±–Ω–æ–π –°—Ç–∞–Ω—Ü–∏–∏" ‚Äî —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞, 
            –∑–∞–±–æ—Ç—ã –æ –ø–∞—Ü–∏–µ–Ω—Ç–∞—Ö –∏ –ª—é–±–≤–∏ –∫ —Å–≤–æ–µ–º—É –¥–µ–ª—É. –ú—ã —Å–æ–∑–¥–∞–µ–º –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–ª–∏–Ω–∏–∫—É, 
            –∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤.
          </p>

          {/* Join Banner */}
          <motion.div
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            className="bg-gradient-to-r from-primary to-accent rounded-2xl p-8 text-white mb-12"
          >
            <h2 className="text-2xl md:text-3xl font-bold mb-4">
              üåü –•–æ—á–µ—à—å –ø–æ–ø–∞—Å—Ç—å —Å—é–¥–∞ –∏ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é?
            </h2>
            <p className="text-xl opacity-90 mb-6">
              –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ! –ú—ã –≤—Å–µ–≥–¥–∞ –∏—â–µ–º —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã—Ö –≤—Ä–∞—á–µ–π, 
              –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑–¥–µ–ª—è—é—Ç –Ω–∞—à–∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –≥–æ—Ç–æ–≤—ã —Ä–∞—Å—Ç–∏ –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏.
            </p>
            <button
              onClick={() => setIsJobFormOpen(true)}
              className="bg-white text-primary px-8 py-4 rounded-xl font-medium hover:bg-gray-100 transition-colors duration-300"
            >
              –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ
            </button>
          </motion.div>
        </motion.div>

        {/* Team Photo Section */}
        <motion.section
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.4 }}
          className="mb-16"
        >
          <img
            src="https://files.salebot.pro/uploads/file_item/file/449726/GUbc5XlceeL9-5gSQR2xT_oyXgiToDKJ5MtbqJ58bYx4Qf2KRF5wprzRkDQcyh6l3dwpqI8XNAaBS2M820RjDA__.jpeg"
            alt="–ö–æ–º–∞–Ω–¥–∞ –ó—É–±–Ω–æ–π –°—Ç–∞–Ω—Ü–∏–∏"
            className="w-full h-[400px] object-cover object-center rounded-2xl shadow-lg"
            loading="lazy"
          />
        </motion.section>

        {/* Doctors Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-16">
          {doctors.map((doctor, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: index * 0.1 }}
              viewport={{ once: true }}
              className="bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300 hover:-translate-y-2"
            >
              <div className="relative h-64">
                <img
                  src={doctor.image}
                  alt={doctor.name}
                  className="w-full h-full object-cover"
                  loading="lazy"
                />
                <div className={`absolute top-4 right-4 ${doctor.badgeColor} text-white px-3 py-1 rounded-full text-sm font-medium`}>
                  {doctor.badge}
                </div>
              </div>

              <div className="p-8">
                <h3 className="text-2xl font-bold text-[#002B49] mb-2">{doctor.name}</h3>
                <p className="text-primary font-medium mb-4">{doctor.position}</p>
                
                <p className="text-gray-600 italic mb-6 leading-relaxed">
                  "{doctor.story}"
                </p>

                <div className="mb-6">
                  {doctor.achievements.map((achievement, i) => (
                    <div key={i} className="flex items-center mb-2">
                      <span className="text-green-500 mr-2 font-bold">
                        {doctor.isExisting ? '‚úì' : '‚≠ê'}
                      </span>
                      <span className="text-gray-700">{achievement}</span>
                    </div>
                  ))}
                </div>

                <div className="flex gap-3">
                  {doctor.isExisting ? (
                    <>
                      <button
                        onClick={() => handleDoctorAction(doctor, 'appointment')}
                        className="flex-1 bg-primary text-white py-3 px-4 rounded-xl font-medium hover:bg-primary-dark transition-colors duration-300"
                      >
                        –ó–∞–ø–∏—Å–∞—Ç—å—Å—è
                      </button>
                      <button
                        onClick={() => handleDoctorAction(doctor, 'blog')}
                        className="flex-1 border-2 border-primary text-primary py-3 px-4 rounded-xl font-medium hover:bg-primary hover:text-white transition-colors duration-300"
                      >
                        –ß–∏—Ç–∞—Ç—å –±–ª–æ–≥
                      </button>
                    </>
                  ) : (
                    <button
                      onClick={() => {
                        setJobFormData({ ...jobFormData, position: doctor.jobPosition || '' });
                        setIsJobFormOpen(true);
                      }}
                      className="w-full bg-green-500 text-white py-3 px-4 rounded-xl font-medium hover:bg-green-600 transition-colors duration-300 flex items-center justify-center"
                    >
                      <Send className="w-5 h-5 mr-2" />
                      –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É
                    </button>
                  )}
                </div>
              </div>
            </motion.div>
          ))}
        </div>

        {/* Team Testimonials */}
        <motion.section
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="bg-white rounded-2xl p-8 shadow-lg"
        >
          <h2 className="text-3xl font-bold text-center mb-12 text-[#002B49]">
            –ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç —á–ª–µ–Ω—ã –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {teamTestimonials.map((testimonial, index) => (
              <div key={index} className="text-center">
                <p className="text-lg text-gray-700 italic mb-4 leading-relaxed">
                  "{testimonial.quote}"
                </p>
                <p className="text-primary font-medium">‚Äî {testimonial.author}</p>
              </div>
            ))}
          </div>
        </motion.section>
      </div>

      {/* Job Application Modal */}
      {isJobFormOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <motion.div
            initial={{ scale: 0.95, opacity: 0 }}
            animate={{ scale: 1, opacity: 1 }}
            className="bg-white rounded-2xl p-8 w-full max-w-2xl max-h-[90vh] overflow-y-auto"
          >
            <h2 className="text-3xl font-bold text-[#002B49] mb-6 text-center">
              –ì–æ—Ç–æ–≤ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é –≤ "–ó—É–±–Ω–æ–π –°—Ç–∞–Ω—Ü–∏–∏"?
            </h2>
            <p className="text-gray-600 text-center mb-8">
              –û—Ç–ø—Ä–∞–≤—å –Ω–∞–º –∑–∞—è–≤–∫—É –∏ —Ä–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫—É—é –∏—Å—Ç–æ—Ä–∏—é —Ç—ã —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏
            </p>

            {submitStatus === 'success' ? (
              <div className="text-center py-8">
                <CheckCircle className="w-16 h-16 text-green-500 mx-auto mb-4" />
                <h3 className="text-xl font-semibold mb-2">–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É!</h3>
                <p className="text-gray-600">
                  –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à—É –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä—É –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
                </p>
              </div>
            ) : (
              <form onSubmit={handleJobSubmit} className="space-y-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –í–∞—à–µ –∏–º—è *
                  </label>
                  <input
                    type="text"
                    required
                    value={jobFormData.name}
                    onChange={(e) => setJobFormData({ ...jobFormData, name: e.target.value })}
                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-primary focus:border-primary"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∞—è –ø–æ–∑–∏—Ü–∏—è *
                  </label>
                  <select
                    required
                    value={jobFormData.position}
                    onChange={(e) => setJobFormData({ ...jobFormData, position: e.target.value })}
                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-primary focus:border-primary"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é</option>
                    <option value="orthodontist">–í—Ä–∞—á-–æ—Ä—Ç–æ–¥–æ–Ω—Ç</option>
                    <option value="implantologist">–í—Ä–∞—á-–∏–º–ø–ª–∞–Ω—Ç–æ–ª–æ–≥</option>
                    <option value="pediatric">–î–µ—Ç—Å–∫–∏–π —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥</option>
                    <option value="therapist">–í—Ä–∞—á-—Ç–µ—Ä–∞–ø–µ–≤—Ç</option>
                    <option value="surgeon">–í—Ä–∞—á-—Ö–∏—Ä—É—Ä–≥</option>
                    <option value="assistant">–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Ä–∞—á–∞</option>
                    <option value="administrator">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</option>
                    <option value="other">–î—Ä—É–≥–∞—è –ø–æ–∑–∏—Ü–∏—è</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
                  </label>
                  <select
                    value={jobFormData.experience}
                    onChange={(e) => setJobFormData({ ...jobFormData, experience: e.target.value })}
                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-primary focus:border-primary"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—ã—Ç</option>
                    <option value="no-experience">–ë–µ–∑ –æ–ø—ã—Ç–∞</option>
                    <option value="1-3">1-3 –≥–æ–¥–∞</option>
                    <option value="3-5">3-5 –ª–µ—Ç</option>
                    <option value="5+">–ë–æ–ª–µ–µ 5 –ª–µ—Ç</option>
                  </select>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      –¢–µ–ª–µ—Ñ–æ–Ω *
                    </label>
                    <input
                      type="tel"
                      required
                      value={jobFormData.phone}
                      onChange={(e) => setJobFormData({ ...jobFormData, phone: e.target.value })}
                      placeholder="+7 (___) ___-__-__"
                      className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-primary focus:border-primary"
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      Email *
                    </label>
                    <input
                      type="email"
                      required
                      value={jobFormData.email}
                      onChange={(e) => setJobFormData({ ...jobFormData, email: e.target.value })}
                      className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-primary focus:border-primary"
                    />
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –ü–æ—á–µ–º—É —Ö–æ—Ç–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –∏–º–µ–Ω–Ω–æ —É –Ω–∞—Å? *
                  </label>
                  <textarea
                    required
                    value={jobFormData.motivation}
                    onChange={(e) => setJobFormData({ ...jobFormData, motivation: e.target.value })}
                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–π –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –ø–ª–∞–Ω–∞—Ö..."
                    rows={4}
                    className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-primary focus:border-primary"
                  />
                </div>

                <div className="flex gap-4">
                  <button
                    type="button"
                    onClick={() => setIsJobFormOpen(false)}
                    className="flex-1 border border-gray-300 text-gray-700 py-3 px-6 rounded-xl font-medium hover:bg-gray-50 transition-colors duration-300"
                  >
                    –û—Ç–º–µ–Ω–∞
                  </button>
                  <button
                    type="submit"
                    disabled={isSubmitting}
                    className={`flex-1 bg-green-500 text-white py-3 px-6 rounded-xl font-medium hover:bg-green-600 transition-colors duration-300 flex items-center justify-center ${
                      isSubmitting ? 'opacity-70 cursor-not-allowed' : ''
                    }`}
                  >
                    <Send className="w-5 h-5 mr-2" />
                    {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'}
                  </button>
                </div>

                {submitStatus === 'error' && (
                  <p className="text-red-500 text-sm text-center">
                    –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.
                  </p>
                )}

                <p className="text-sm text-gray-500 text-center">
                  –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ä–µ–∑—é–º–µ –º–æ–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º –ø–∏—Å—å–º–µ –∏–ª–∏ –ø—Ä–∏–Ω–µ—Å—Ç–∏ –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ
                </p>
              </form>
            )}
          </motion.div>
        </div>
      )}

      <AppointmentModal 
        isOpen={isModalOpen} 
        onClose={() => {
          setIsModalOpen(false);
          setSelectedDoctor('');
        }}
        selectedDoctor={selectedDoctor}
      />
    </div>
  );
};