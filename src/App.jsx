import { useState, useEffect } from 'react'
import './App.css'

function App() {
  const [count, setCount] = useState(0)
  const [darkMode, setDarkMode] = useState(false)
  const [notifications, setNotifications] = useState([])
  const [showModal, setShowModal] = useState(false)
  const [formData, setFormData] = useState({ name: '', email: '', message: '' })

  // Toggle dark mode
  useEffect(() => {
    if (darkMode) {
      document.body.classList.add('dark-mode')
    } else {
      document.body.classList.remove('dark-mode')
    }
  }, [darkMode])

  // Add notification
  const addNotification = (message) => {
    const id = Date.now()
    setNotifications([...notifications, { id, message }])
    setTimeout(() => {
      setNotifications(prev => prev.filter(n => n.id !== id))
    }, 3000)
  }

  // Handle form submit
  const handleSubmit = (e) => {
    e.preventDefault()
    addNotification(`–°–ø–∞—Å–∏–±–æ, ${formData.name}! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.`)
    setFormData({ name: '', email: '', message: '' })
    setShowModal(false)
  }

  // Handle input change
  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value })
  }

  return (
    <div className="app">
      {/* Header */}
      <header className="header">
        <h1>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h1>
        <button
          className="theme-toggle"
          onClick={() => setDarkMode(!darkMode)}
          aria-label="Toggle dark mode"
        >
          {darkMode ? '‚òÄÔ∏è' : 'üåô'}
        </button>
      </header>

      {/* Notifications */}
      <div className="notifications">
        {notifications.map(notif => (
          <div key={notif.id} className="notification">
            {notif.message}
          </div>
        ))}
      </div>

      {/* Main Content */}
      <main className="main-content">
        {/* Counter Card */}
        <div className="card">
          <h2>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –°—á–µ—Ç—á–∏–∫</h2>
          <div className="counter-display">{count}</div>
          <div className="button-group">
            <button onClick={() => setCount(count - 1)}>‚ûñ –ú–∏–Ω—É—Å</button>
            <button onClick={() => setCount(0)}>üîÑ –°–±—Ä–æ—Å</button>
            <button onClick={() => setCount(count + 1)}>‚ûï –ü–ª—é—Å</button>
          </div>
        </div>

        {/* Interactive Buttons */}
        <div className="card">
          <h2>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ö–Ω–æ–ø–∫–∏</h2>
          <div className="button-group">
            <button onClick={() => addNotification('–ö–Ω–æ–ø–∫–∞ 1 –Ω–∞–∂–∞—Ç–∞!')}>
              –ö–Ω–æ–ø–∫–∞ 1
            </button>
            <button onClick={() => addNotification('–ö–Ω–æ–ø–∫–∞ 2 –Ω–∞–∂–∞—Ç–∞!')}>
              –ö–Ω–æ–ø–∫–∞ 2
            </button>
            <button onClick={() => setShowModal(true)}>
              –û—Ç–∫—Ä—ã—Ç—å –§–æ—Ä–º—É
            </button>
          </div>
        </div>

        {/* Info Card */}
        <div className="card">
          <h2>–û –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</h2>
          <p>–≠—Ç–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏:</p>
          <ul>
            <li>üåì –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º–Ω–æ–π/—Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã</li>
            <li>üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</li>
            <li>üìù –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º—ã</li>
            <li>üé® –ê–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã</li>
            <li>üìä –°—á–µ—Ç—á–∏–∫–∏ –∏ –∫–Ω–æ–ø–∫–∏</li>
          </ul>
        </div>
      </main>

      {/* Modal */}
      {showModal && (
        <div className="modal-overlay" onClick={() => setShowModal(false)}>
          <div className="modal" onClick={(e) => e.stopPropagation()}>
            <button
              className="modal-close"
              onClick={() => setShowModal(false)}
            >
              ‚úï
            </button>
            <h2>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –§–æ—Ä–º–∞</h2>
            <form onSubmit={handleSubmit}>
              <div className="form-group">
                <label>–ò–º—è:</label>
                <input
                  type="text"
                  name="name"
                  value={formData.name}
                  onChange={handleChange}
                  required
                />
              </div>
              <div className="form-group">
                <label>Email:</label>
                <input
                  type="email"
                  name="email"
                  value={formData.email}
                  onChange={handleChange}
                  required
                />
              </div>
              <div className="form-group">
                <label>–°–æ–æ–±—â–µ–Ω–∏–µ:</label>
                <textarea
                  name="message"
                  value={formData.message}
                  onChange={handleChange}
                  rows="4"
                  required
                />
              </div>
              <button type="submit" className="submit-btn">
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
              </button>
            </form>
          </div>
        </div>
      )}

      {/* Footer */}
      <footer className="footer">
        <p>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ React + Vite</p>
      </footer>
    </div>
  )
}

export default App
